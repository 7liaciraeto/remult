[{"__symbolic":"module","version":3,"metadata":{"ColumnCollection":{"__symbolic":"class","arity":1,"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"error","message":"Expression form not supported","line":10,"character":35},{"__symbolic":"error","message":"Expression form not supported","line":10,"character":67},{"__symbolic":"error","message":"Expression form not supported","line":10,"character":103},{"__symbolic":"error","message":"Expression form not supported","line":10,"character":145}]}],"_optionalKeys":[{"__symbolic":"method"}],"add":[{"__symbolic":"method"},{"__symbolic":"method"},{"__symbolic":"method"}],"colListChanged":[{"__symbolic":"method"}],"onColListChange":[{"__symbolic":"method"}],"moveCol":[{"__symbolic":"method"}],"filterRows":[{"__symbolic":"method"}],"clearFilter":[{"__symbolic":"method"}],"_shouldShowFilterDialog":[{"__symbolic":"method"}],"showFilterDialog":[{"__symbolic":"method"}],"deleteCol":[{"__symbolic":"method"}],"addCol":[{"__symbolic":"method"}],"designColumn":[{"__symbolic":"method"}],"_getEditable":[{"__symbolic":"method"}],"_click":[{"__symbolic":"method"}],"_getColValue":[{"__symbolic":"method"}],"_getColDataType":[{"__symbolic":"method"}],"_getColumnClass":[{"__symbolic":"method"}],"_getError":[{"__symbolic":"method"}],"autoGenerateColumnsBasedOnData":[{"__symbolic":"method"}],"columnSettingsTypeScript":[{"__symbolic":"method"}],"_colValueChanged":[{"__symbolic":"method"}],"_initColumnsArrays":[{"__symbolic":"method"}],"getGridColumns":[{"__symbolic":"method"}],"getNonGridColumns":[{"__symbolic":"method"}]}},"dataAreaSettings":{"__symbolic":"interface"},"DataAreaCompnent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"data-area","template":"\n\n<div class=\"form-horizontal\" *ngIf=\"settings.columns&&settings.columns.currentRow()\" >\n\n        <div class=\"{{getColumnsClass()}}\" *ngFor=\"let col of theColumns()\">\n            <div class=\"form-group {{settings.columns._getColumnClass(map,settings.columns.currentRow())}}\" *ngFor=\"let map of col\" >\n                <div class=\"col-sm-{{labelWidth}}\">\n                    <label class=\"control-label\" *ngIf=\"!map.designMode\">{{map.caption}}</label>\n                    <column-designer [settings]=\"settings.columns\" [map]=\"map\"></column-designer>\n                </div>\n                <div class=\"col-sm-{{12-labelWidth}}\">\n                    <data-control [settings]=\"settings.columns\" [map]=\"map\" [record]=\"settings.columns.currentRow()\"></data-control>\n                </div>\n            </div>\n        </div>\n</div>\n\n\n"}]}],"members":{"ngOnChanges":[{"__symbolic":"method"}],"getColumnsClass":[{"__symbolic":"method"}],"theColumns":[{"__symbolic":"method"}],"settings":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"labelWidth":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"columns":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}]}},"DataControlComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"data-control","template":"\n<span *ngIf=\"!_getEditable()\" >{{settings._getColValue(map,record)}}</span>\n<div *ngIf=\"_getEditable()\" class=\"\" [class.has-error]=\"settings._getError(map,record)\">\n    <div >\n        <div [class.input-group]=\"showDescription()||map.click\" *ngIf=\"!isSelect()\">\n            <div class=\"input-group-btn\" *ngIf=\"map.click\">\n                <button type=\"button\" class=\"btn btn-default\" (click)=\"settings._click(map,record)\" > <span class=\"glyphicon glyphicon-chevron-down\"></span></button>\n            </div>\n            <input class=\"form-control\"  [(ngModel)]=\"record[map.key]\" type=\"{{settings._getColDataType(map)}}\" (ngModelChange)=\"settings._colValueChanged(map,record)\" />\n            <div class=\"input-group-addon\" *ngIf=\"showDescription()\">{{settings._getColValue(map,record)}}</div>\n\n        </div>\n        <div *ngIf=\"isSelect()\">\n            <select  class=\"form-control\" [(ngModel)]=\"record[map.key]\" (ngModelChange)=\"settings._colValueChanged(map,record)\" >\n                <option *ngFor=\"let v of map.dropDown.items\" value=\"{{v.id}}\">{{v.caption}}</option>\n\n            </select>\n        </div>\n    <span class=\"help-block\" *ngIf=\"settings._getError(map,record)\">{{settings._getError(map,record)}}</span>\n    </div>\n</div>"}]}],"members":{"map":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"record":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"notReadonly":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"showDescription":[{"__symbolic":"method"}],"_getEditable":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}],"isSelect":[{"__symbolic":"method"}],"settings":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}]}},"SelectPopup":{"__symbolic":"class","arity":1,"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"DataSettings","arguments":[{"__symbolic":"error","message":"Could not resolve type","line":481,"character":40,"context":{"typeName":"rowType"}}]},{"__symbolic":"reference","name":"any"}]}],"search":[{"__symbolic":"method"}],"modalSelect":[{"__symbolic":"method"}],"show":[{"__symbolic":"method"}],"searchColumnCaption":[{"__symbolic":"method"}]}},"SelectPopupSettings":{"__symbolic":"interface"},"SelectPopupComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"select-popup","template":"\n\n<!-- Modal -->\n<div class=\"modal fade\"  *ngIf=\"settings && settings.popupSettings\" id=\"{{settings.popupSettings.modalId}}\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>\n        <h4 class=\"modal-title\" id=\"myModalLabel\">{{settings.popupSettings.title}}</h4>\n      </div>\n      <div class=\"modal-body\">\n<div class=\"row\">\n<div class=\"col-sm-10\">\n        <div class=\"form-group\">\n    <label >Search</label>\n    <input type=\"search\" class=\"form-control\" placeholder=\"{{settings.popupSettings.searchColumnCaption()}}\"[(ngModel)]=\"settings.popupSettings.searchText\" (ngModelChange)=\"settings.popupSettings.search()\">\n  </div>\n</div>\n        <data-grid [settings]=\"settings\"></data-grid>\n</div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">Close</button>\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"settings.popupSettings.modalSelect()\">Select</button>\n      </div>\n    </div>\n  </div>\n</div>"}]}],"members":{"settings":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"dataView":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"ngOnChanges":[{"__symbolic":"method"}]}},"dropDownOptions":{"__symbolic":"interface"},"dropDownItem":{"__symbolic":"interface"},"ColumnDesigner":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"column-designer","template":"\n<div *ngIf=\"map.designMode\" class=\"columnDesigner\">\n    <div class=\"form-group\">\n        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"map.caption\">\n    </div>\n    <label>Key</label>\n    <div class=\"form-group\">\n        <select class=\"form-control\" [(ngModel)]=\"map.key\">\n            <option value=\"\" selected></option>\n            <option  selected *ngFor=\"let k of settings._optionalKeys()\">{{k}}</option>\n        </select>\n    </div>\n    <label>Input Type</label>\n    <div class=\"form-group\">\n        <select class=\"form-control\" [(ngModel)]=\"map.inputType\" placeholder=\"inputType\">\n            <option value=\"\" selected>text</option>\n            <option value=\"number\">number</option>\n            <option value=\"date\">date</option>\n            <option value=\"checkbox\">checkbox</option>\n        </select>\n    </div>\n\n    <div class=\"checkbox\">\n\n        Readonly <input type=\"checkbox\"  [(ngModel)]=\"map.readonly\">\n    </div>\n\n\n    <div class=\"form-group\">\n\n        <button class=\"btn btn-success glyphicon glyphicon-ok pull-left\" (click)=\"settings.designColumn(map)\"></button>\n        <div class=\"btn-group pull-right\">\n                <button class=\"btn btn-danger glyphicon glyphicon-trash \" (click)=\"settings.deleteCol(map)\"></button>\n                <button class=\"btn btn-primary glyphicon glyphicon-plus \" (click)=\"settings.addCol(map)\"></button>\n                <button class=\"btn btn-primary glyphicon glyphicon-chevron-left\" (click)=\"settings.moveCol(map,-1)\"></button>\n                <button class=\"btn btn-primary glyphicon glyphicon-chevron-right\" (click)=\"settings.moveCol(map,1)\"></button>\n        </div>\n    </div>\n</div>\n<span class=\"designModeButton pull-right\">\n<span class=\"glyphicon glyphicon-pencil \" (click)=\"settings.designColumn(map)\" *ngIf=\"settings.allowDesignMode\"></span>\n</span>\n"}]}],"members":{"map":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"settings":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}]}},"DataGridComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"data-grid","template":"<div class=\"pull-right\" *ngIf=\"settings && records\">\n    <button class=\"btn glyphicon glyphicon-pencil btn-primary\" *ngIf=\"settings.columns.allowDesignMode\" (click)=\"settings.columns.designMode=!settings.columns.designMode\"></button>\n    <button class=\"btn glyphicon glyphicon-chevron-left\" *ngIf=\"settings.page>1\" (click)=\"settings.previousPage()\"></button>\n    <button class=\"btn glyphicon glyphicon-chevron-right\" *ngIf=\"records.items&& records.items.length>0\" (click)=\"settings.nextPage()\"></button>\n    <button class=\"btn btn-primary glyphicon glyphicon-plus\" *ngIf=\"settings.allowUpdate &&settings.allowInsert\" (click)=\"settings.addNewRow()\"></button>\n  </div>\n\n  <div *ngIf=\"settings&&settings.columns&& settings.columns.designMode\">\n\n    <pre>\n  {{settings.columns.columnSettingsTypeScript()}}\n  </pre>\n\n\n  </div>\n  <div >\n    <table class=\"table table-bordered table-condensed table-hover table-striped\" *ngIf=\"settings&&settings.columns\">\n\n      <thead>\n        <tr>\n          <th *ngFor=\"let map of settings.columns.getGridColumns()\" class=\"headerWithFilter\">\n            <span (click)=\"settings.sort(map.key)\">{{map.caption}}</span>\n\n\n            <span class=\"glyphicon glyphicon-filter filterButton\" [class.filteredFilterButton]=\"settings.columns.userFilter[map.key]\"\n              (click)=\"settings.columns.showFilterDialog(map)\"></span>\n            <div class=\"filterDialog col-sm-4\" *ngIf=\"settings.columns._shouldShowFilterDialog(map)\">\n              <div class=\"form-group\">\n                <data-control [settings]=\"settings.columns\" [map]=\"map\" [record]=\"settings.columns.userFilter\" [notReadonly]=\"true\"></data-control>\n              </div>\n              <button class=\"btn glyphicon glyphicon-ok btn-success\" (click)=\"settings.columns.filterRows(map)\"></button>\n              <button class=\"btn glyphicon glyphicon-remove btn-primary\" (click)=\"settings.columns.clearFilter(map)\"></button>\n\n            </div>\n            <span class=\"glyphicon glyphicon-chevron-down pull-right\" *ngIf=\"settings.sortedAscending(map.key)\"></span>\n            <span class=\"glyphicon glyphicon-chevron-up pull-right\" *ngIf=\"settings.sortedDescending(map.key)\"></span>\n            <column-designer [settings]=\"settings.columns\" [map]=\"map\"></column-designer>\n\n\n\n\n\n          </th>\n          <th *ngIf=\"rowButtons&& rowButtons.length>0\" [class.col-xs-1]=\"rowButtons&&rowButtons.length<3\" [class.col-xs-2]=\"rowButtons.length>=3\"></th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let record of records\" [className]=\"_getRowClass(record)\" (click)=\"rowClicked(record)\">\n\n          <td *ngFor=\"let map of settings.columns.getGridColumns()\" [className]=\"settings.columns._getColumnClass(map,record)\">\n            <data-control [settings]=\"settings.columns\" [map]=\"map\" [record]=\"record\"></data-control>\n          </td>\n          <td *ngIf=\"rowButtons.length>0\" style=\"white-space:nowrap\">\n            <span *ngFor=\"let b of rowButtons\">\n              <button class=\"btn {{getButtonCssClass(b,record) }}\" *ngIf=\"b.visible(record)\" (click)=\"b.click(record)\">{{b.name}}</button>\n            </span>\n          </td>\n        </tr>\n\n      </tbody>\n    </table>\n  </div>\n  <data-area *ngIf=\"!settings.hideDataArea\" [settings]=\"settings\" [columns]=\"2\"></data-area>\n  ","styles":[".columnDesigner {\n    background-color: white;\n    position: absolute;\n    padding: 10px;\n    border-color: gray;\n    border-width: 2px;\n    border-style: solid;\n    z-index: 800;\n    border-radius: 5px;\n    width: 300px;\n}\n\n    .columnDesigner .form-group {\n        margin-right: 0;\n        margin-left: 0;\n    }\n\n.filterDialog {\n    background-color: white;\n    position: absolute;\n    padding: 10px;\n    border-color: gray;\n    border-width: 2px;\n    border-style: solid;\n    z-index: 800;\n    border-radius: 5px;\n\n}\n\n    .filterDialog .form-group {\n        margin-right: 0;\n        margin-left: 0;\n    }\n\n.designModeButton span {\n    visibility: hidden;\n}\n\n.designModeButton:hover span {\n    visibility: visible\n}\n\n.headerWithFilter {\n}\n.headerWithFilter .filterButton{\n    visibility:hidden;\n}\n    .headerWithFilter .filteredFilterButton {\n        visibility: visible;\n    }\n    .headerWithFilter:hover .filterButton {\n        visibility: visible;\n    }\n\n.filterButton {\n}\ntable input {\n    min-width:75px;\n}\ntable select {\n    min-width:100px\n}"]}]}],"members":{"records":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"settings":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"dataView":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"getButtonCssClass":[{"__symbolic":"method"}],"addButton":[{"__symbolic":"method"}],"rowClicked":[{"__symbolic":"method"}],"nextPage":[{"__symbolic":"method"}],"previousPage":[{"__symbolic":"method"}],"catchErrors":[{"__symbolic":"method"}],"showError":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}],"_getRowClass":[{"__symbolic":"method"}]}},"makeTitle":{"__symbolic":"function","parameters":["name"],"value":{"__symbolic":"error","message":"Expression form not supported","line":944,"character":17}},"IDataAreaSettings":{"__symbolic":"interface"},"DataAreaSettings":{"__symbolic":"class","arity":1,"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ColumnCollection","arguments":[{"__symbolic":"error","message":"Could not resolve type","line":958,"character":49,"context":{"typeName":"rowType"}}]},{"__symbolic":"reference","name":"any","arguments":[{"__symbolic":"error","message":"Could not resolve type","line":958,"character":94,"context":{"typeName":"rowType"}}]}]}]}},"Lookup":{"__symbolic":"class","arity":1,"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"string"}]}],"get":[{"__symbolic":"method"}],"found":[{"__symbolic":"method"}],"getInternal":[{"__symbolic":"method"}],"_internalGetByOptions":[{"__symbolic":"method"}],"whenGet":[{"__symbolic":"method"}]}},"DataSettings":{"__symbolic":"class","arity":1,"members":{"showSelectPopup":[{"__symbolic":"method"}],"addNewRow":[{"__symbolic":"method"}],"__scopeToRow":[{"__symbolic":"method"}],"addArea":[{"__symbolic":"method"}],"setCurrentRow":[{"__symbolic":"method"}],"nextRow":[{"__symbolic":"method"}],"previousRowAllowed":[{"__symbolic":"method"}],"previousRow":[{"__symbolic":"method"}],"deleteCurentRow":[{"__symbolic":"method"}],"currentRowAsRestListItemRow":[{"__symbolic":"method"}],"cancelCurrentRowChanges":[{"__symbolic":"method"}],"deleteCurrentRowAllowed":[{"__symbolic":"method"}],"currentRowChanged":[{"__symbolic":"method"}],"saveCurrentRow":[{"__symbolic":"method"}],"_doSavingRow":[{"__symbolic":"method"}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"string"},{"__symbolic":"reference","name":"any","arguments":[{"__symbolic":"error","message":"Could not resolve type","line":1161,"character":59,"context":{"typeName":"rowType"}}]}]}],"nextPage":[{"__symbolic":"method"}],"previousPage":[{"__symbolic":"method"}],"get":[{"__symbolic":"method"}],"sort":[{"__symbolic":"method"}],"sortedAscending":[{"__symbolic":"method"}],"sortedDescending":[{"__symbolic":"method"}],"getRecords":[{"__symbolic":"method"}]}},"IDataSettings":{"__symbolic":"interface"},"ModelState":{"__symbolic":"class","arity":1,"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"any"}]}],"addError":[{"__symbolic":"method"}],"required":[{"__symbolic":"method"}],"addErrorMessage":[{"__symbolic":"method"}]}},"rowEvent":{"__symbolic":"interface"},"ColumnSetting":{"__symbolic":"interface"},"FilteredColumnSetting":{"__symbolic":"interface"},"rowButtonBase":{"__symbolic":"interface"},"rowButton":{"__symbolic":"interface"},"RestList":{"__symbolic":"class","arity":1,"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"string"}]}],"map":[{"__symbolic":"method"}],"get":[{"__symbolic":"method"}],"add":[{"__symbolic":"method"}],"replaceRow":[{"__symbolic":"method"}],"save":[{"__symbolic":"method"}]}},"hasId":{"__symbolic":"interface"},"restListItem":{"__symbolic":"interface"},"getOptions":{"__symbolic":"interface"},"lookupRowInfo":{"__symbolic":"class","arity":1},"AppHelper":{"__symbolic":"class","members":{"__ctor__":[{"__symbolic":"constructor"}],"Register":[{"__symbolic":"method"}],"Add":[{"__symbolic":"method"}]}},"MenuEntry":{"__symbolic":"interface"},"getDayOfWeek":{"__symbolic":"function","parameters":["date"],"value":{"__symbolic":"call","expression":{"__symbolic":"select","expression":{"__symbolic":"call","expression":{"__symbolic":"reference","name":"dateFromDataString"},"arguments":[{"__symbolic":"reference","name":"date"}]},"member":"getDay"}}},"getDayOfWeekName":{"__symbolic":"function","parameters":["date"],"value":{"__symbolic":"call","expression":{"__symbolic":"select","expression":{"__symbolic":"call","expression":{"__symbolic":"reference","name":"dateFromDataString"},"arguments":[{"__symbolic":"reference","name":"date"}]},"member":"toLocaleDateString"},"arguments":["en-us",{"weekday":"long"}]}},"dateFromDataString":{"__symbolic":"function"},"dateToDataString":{"__symbolic":"function"},"entity":{"__symbolic":"class","members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"string"}]}],"initColumns":[{"__symbolic":"method"}],"applyColumn":[{"__symbolic":"method"}]}},"init":{"__symbolic":"function"},"column":{"__symbolic":"class","arity":1,"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"any"}]}],"isEqualTo":[{"__symbolic":"method"}]}},"columnValueProvider":{"__symbolic":"interface"},"iDataColumnSettings":{"__symbolic":"interface"},"textColumn":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"column"},"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"any"}]}]}},"dateColumn":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"column"},"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"any"}]}]}},"numberColumn":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"column"},"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"any"}]}]}},"iFilter":{"__symbolic":"interface"},"filter":{"__symbolic":"class","members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"error","message":"Expression form not supported","line":1755,"character":31}]}],"and":[{"__symbolic":"method"}],"__addToUrl":[{"__symbolic":"method"}]}},"dataView":{"__symbolic":"class","members":{"forEach":[{"__symbolic":"method"}],"refreshData":[{"__symbolic":"method"}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"any"}]}],"addArea":[{"__symbolic":"method"}],"__getDataSettings":[{"__symbolic":"method"}],"initDataSettings":[{"__symbolic":"method"}]}},"IdataViewSettings":{"__symbolic":"interface"},"IRelation":{"__symbolic":"interface"},"radWebModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule"},"arguments":[{"imports":[{"__symbolic":"reference","module":"@angular/forms","name":"FormsModule"},{"__symbolic":"reference","module":"@angular/common","name":"CommonModule"}],"declarations":[{"__symbolic":"reference","name":"DataGridComponent"},{"__symbolic":"reference","name":"DataAreaCompnent"},{"__symbolic":"reference","name":"DataControlComponent"},{"__symbolic":"reference","name":"ColumnDesigner"},{"__symbolic":"reference","name":"SelectPopupComponent"}],"providers":[],"bootstrap":[],"exports":[{"__symbolic":"reference","name":"DataGridComponent"},{"__symbolic":"reference","name":"DataAreaCompnent"},{"__symbolic":"reference","name":"SelectPopupComponent"}]}]}]}}},{"__symbolic":"module","version":1,"metadata":{"ColumnCollection":{"__symbolic":"class","arity":1,"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"error","message":"Expression form not supported","line":10,"character":35},{"__symbolic":"error","message":"Expression form not supported","line":10,"character":67},{"__symbolic":"error","message":"Expression form not supported","line":10,"character":103},{"__symbolic":"error","message":"Expression form not supported","line":10,"character":145}]}],"_optionalKeys":[{"__symbolic":"method"}],"add":[{"__symbolic":"method"},{"__symbolic":"method"},{"__symbolic":"method"}],"colListChanged":[{"__symbolic":"method"}],"onColListChange":[{"__symbolic":"method"}],"moveCol":[{"__symbolic":"method"}],"filterRows":[{"__symbolic":"method"}],"clearFilter":[{"__symbolic":"method"}],"_shouldShowFilterDialog":[{"__symbolic":"method"}],"showFilterDialog":[{"__symbolic":"method"}],"deleteCol":[{"__symbolic":"method"}],"addCol":[{"__symbolic":"method"}],"designColumn":[{"__symbolic":"method"}],"_getEditable":[{"__symbolic":"method"}],"_click":[{"__symbolic":"method"}],"_getColValue":[{"__symbolic":"method"}],"_getColDataType":[{"__symbolic":"method"}],"_getColumnClass":[{"__symbolic":"method"}],"_getError":[{"__symbolic":"method"}],"autoGenerateColumnsBasedOnData":[{"__symbolic":"method"}],"columnSettingsTypeScript":[{"__symbolic":"method"}],"_colValueChanged":[{"__symbolic":"method"}],"_initColumnsArrays":[{"__symbolic":"method"}],"getGridColumns":[{"__symbolic":"method"}],"getNonGridColumns":[{"__symbolic":"method"}]}},"dataAreaSettings":{"__symbolic":"interface"},"DataAreaCompnent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"data-area","template":"\n\n<div class=\"form-horizontal\" *ngIf=\"settings.columns&&settings.columns.currentRow()\" >\n\n        <div class=\"{{getColumnsClass()}}\" *ngFor=\"let col of theColumns()\">\n            <div class=\"form-group {{settings.columns._getColumnClass(map,settings.columns.currentRow())}}\" *ngFor=\"let map of col\" >\n                <div class=\"col-sm-{{labelWidth}}\">\n                    <label class=\"control-label\" *ngIf=\"!map.designMode\">{{map.caption}}</label>\n                    <column-designer [settings]=\"settings.columns\" [map]=\"map\"></column-designer>\n                </div>\n                <div class=\"col-sm-{{12-labelWidth}}\">\n                    <data-control [settings]=\"settings.columns\" [map]=\"map\" [record]=\"settings.columns.currentRow()\"></data-control>\n                </div>\n            </div>\n        </div>\n</div>\n\n\n"}]}],"members":{"ngOnChanges":[{"__symbolic":"method"}],"getColumnsClass":[{"__symbolic":"method"}],"theColumns":[{"__symbolic":"method"}],"settings":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"labelWidth":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"columns":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}]}},"DataControlComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"data-control","template":"\n<span *ngIf=\"!_getEditable()\" >{{settings._getColValue(map,record)}}</span>\n<div *ngIf=\"_getEditable()\" class=\"\" [class.has-error]=\"settings._getError(map,record)\">\n    <div >\n        <div [class.input-group]=\"showDescription()||map.click\" *ngIf=\"!isSelect()\">\n            <div class=\"input-group-btn\" *ngIf=\"map.click\">\n                <button type=\"button\" class=\"btn btn-default\" (click)=\"settings._click(map,record)\" > <span class=\"glyphicon glyphicon-chevron-down\"></span></button>\n            </div>\n            <input class=\"form-control\"  [(ngModel)]=\"record[map.key]\" type=\"{{settings._getColDataType(map)}}\" (ngModelChange)=\"settings._colValueChanged(map,record)\" />\n            <div class=\"input-group-addon\" *ngIf=\"showDescription()\">{{settings._getColValue(map,record)}}</div>\n\n        </div>\n        <div *ngIf=\"isSelect()\">\n            <select  class=\"form-control\" [(ngModel)]=\"record[map.key]\" (ngModelChange)=\"settings._colValueChanged(map,record)\" >\n                <option *ngFor=\"let v of map.dropDown.items\" value=\"{{v.id}}\">{{v.caption}}</option>\n\n            </select>\n        </div>\n    <span class=\"help-block\" *ngIf=\"settings._getError(map,record)\">{{settings._getError(map,record)}}</span>\n    </div>\n</div>"}]}],"members":{"map":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"record":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"notReadonly":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"showDescription":[{"__symbolic":"method"}],"_getEditable":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}],"isSelect":[{"__symbolic":"method"}],"settings":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}]}},"SelectPopup":{"__symbolic":"class","arity":1,"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"DataSettings","arguments":[{"__symbolic":"error","message":"Could not resolve type","line":481,"character":40,"context":{"typeName":"rowType"}}]},{"__symbolic":"reference","name":"any"}]}],"search":[{"__symbolic":"method"}],"modalSelect":[{"__symbolic":"method"}],"show":[{"__symbolic":"method"}],"searchColumnCaption":[{"__symbolic":"method"}]}},"SelectPopupSettings":{"__symbolic":"interface"},"SelectPopupComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"select-popup","template":"\n\n<!-- Modal -->\n<div class=\"modal fade\"  *ngIf=\"settings && settings.popupSettings\" id=\"{{settings.popupSettings.modalId}}\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>\n        <h4 class=\"modal-title\" id=\"myModalLabel\">{{settings.popupSettings.title}}</h4>\n      </div>\n      <div class=\"modal-body\">\n<div class=\"row\">\n<div class=\"col-sm-10\">\n        <div class=\"form-group\">\n    <label >Search</label>\n    <input type=\"search\" class=\"form-control\" placeholder=\"{{settings.popupSettings.searchColumnCaption()}}\"[(ngModel)]=\"settings.popupSettings.searchText\" (ngModelChange)=\"settings.popupSettings.search()\">\n  </div>\n</div>\n        <data-grid [settings]=\"settings\"></data-grid>\n</div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">Close</button>\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"settings.popupSettings.modalSelect()\">Select</button>\n      </div>\n    </div>\n  </div>\n</div>"}]}],"members":{"settings":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"dataView":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"ngOnChanges":[{"__symbolic":"method"}]}},"dropDownOptions":{"__symbolic":"interface"},"dropDownItem":{"__symbolic":"interface"},"ColumnDesigner":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"column-designer","template":"\n<div *ngIf=\"map.designMode\" class=\"columnDesigner\">\n    <div class=\"form-group\">\n        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"map.caption\">\n    </div>\n    <label>Key</label>\n    <div class=\"form-group\">\n        <select class=\"form-control\" [(ngModel)]=\"map.key\">\n            <option value=\"\" selected></option>\n            <option  selected *ngFor=\"let k of settings._optionalKeys()\">{{k}}</option>\n        </select>\n    </div>\n    <label>Input Type</label>\n    <div class=\"form-group\">\n        <select class=\"form-control\" [(ngModel)]=\"map.inputType\" placeholder=\"inputType\">\n            <option value=\"\" selected>text</option>\n            <option value=\"number\">number</option>\n            <option value=\"date\">date</option>\n            <option value=\"checkbox\">checkbox</option>\n        </select>\n    </div>\n\n    <div class=\"checkbox\">\n\n        Readonly <input type=\"checkbox\"  [(ngModel)]=\"map.readonly\">\n    </div>\n\n\n    <div class=\"form-group\">\n\n        <button class=\"btn btn-success glyphicon glyphicon-ok pull-left\" (click)=\"settings.designColumn(map)\"></button>\n        <div class=\"btn-group pull-right\">\n                <button class=\"btn btn-danger glyphicon glyphicon-trash \" (click)=\"settings.deleteCol(map)\"></button>\n                <button class=\"btn btn-primary glyphicon glyphicon-plus \" (click)=\"settings.addCol(map)\"></button>\n                <button class=\"btn btn-primary glyphicon glyphicon-chevron-left\" (click)=\"settings.moveCol(map,-1)\"></button>\n                <button class=\"btn btn-primary glyphicon glyphicon-chevron-right\" (click)=\"settings.moveCol(map,1)\"></button>\n        </div>\n    </div>\n</div>\n<span class=\"designModeButton pull-right\">\n<span class=\"glyphicon glyphicon-pencil \" (click)=\"settings.designColumn(map)\" *ngIf=\"settings.allowDesignMode\"></span>\n</span>\n"}]}],"members":{"map":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"settings":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}]}},"DataGridComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"data-grid","template":"<div class=\"pull-right\" *ngIf=\"settings && records\">\n    <button class=\"btn glyphicon glyphicon-pencil btn-primary\" *ngIf=\"settings.columns.allowDesignMode\" (click)=\"settings.columns.designMode=!settings.columns.designMode\"></button>\n    <button class=\"btn glyphicon glyphicon-chevron-left\" *ngIf=\"settings.page>1\" (click)=\"settings.previousPage()\"></button>\n    <button class=\"btn glyphicon glyphicon-chevron-right\" *ngIf=\"records.items&& records.items.length>0\" (click)=\"settings.nextPage()\"></button>\n    <button class=\"btn btn-primary glyphicon glyphicon-plus\" *ngIf=\"settings.allowUpdate &&settings.allowInsert\" (click)=\"settings.addNewRow()\"></button>\n  </div>\n\n  <div *ngIf=\"settings&&settings.columns&& settings.columns.designMode\">\n\n    <pre>\n  {{settings.columns.columnSettingsTypeScript()}}\n  </pre>\n\n\n  </div>\n  <div >\n    <table class=\"table table-bordered table-condensed table-hover table-striped\" *ngIf=\"settings&&settings.columns\">\n\n      <thead>\n        <tr>\n          <th *ngFor=\"let map of settings.columns.getGridColumns()\" class=\"headerWithFilter\">\n            <span (click)=\"settings.sort(map.key)\">{{map.caption}}</span>\n\n\n            <span class=\"glyphicon glyphicon-filter filterButton\" [class.filteredFilterButton]=\"settings.columns.userFilter[map.key]\"\n              (click)=\"settings.columns.showFilterDialog(map)\"></span>\n            <div class=\"filterDialog col-sm-4\" *ngIf=\"settings.columns._shouldShowFilterDialog(map)\">\n              <div class=\"form-group\">\n                <data-control [settings]=\"settings.columns\" [map]=\"map\" [record]=\"settings.columns.userFilter\" [notReadonly]=\"true\"></data-control>\n              </div>\n              <button class=\"btn glyphicon glyphicon-ok btn-success\" (click)=\"settings.columns.filterRows(map)\"></button>\n              <button class=\"btn glyphicon glyphicon-remove btn-primary\" (click)=\"settings.columns.clearFilter(map)\"></button>\n\n            </div>\n            <span class=\"glyphicon glyphicon-chevron-down pull-right\" *ngIf=\"settings.sortedAscending(map.key)\"></span>\n            <span class=\"glyphicon glyphicon-chevron-up pull-right\" *ngIf=\"settings.sortedDescending(map.key)\"></span>\n            <column-designer [settings]=\"settings.columns\" [map]=\"map\"></column-designer>\n\n\n\n\n\n          </th>\n          <th *ngIf=\"rowButtons&& rowButtons.length>0\" [class.col-xs-1]=\"rowButtons&&rowButtons.length<3\" [class.col-xs-2]=\"rowButtons.length>=3\"></th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let record of records\" [className]=\"_getRowClass(record)\" (click)=\"rowClicked(record)\">\n\n          <td *ngFor=\"let map of settings.columns.getGridColumns()\" [className]=\"settings.columns._getColumnClass(map,record)\">\n            <data-control [settings]=\"settings.columns\" [map]=\"map\" [record]=\"record\"></data-control>\n          </td>\n          <td *ngIf=\"rowButtons.length>0\" style=\"white-space:nowrap\">\n            <span *ngFor=\"let b of rowButtons\">\n              <button class=\"btn {{getButtonCssClass(b,record) }}\" *ngIf=\"b.visible(record)\" (click)=\"b.click(record)\">{{b.name}}</button>\n            </span>\n          </td>\n        </tr>\n\n      </tbody>\n    </table>\n  </div>\n  <data-area *ngIf=\"!settings.hideDataArea\" [settings]=\"settings\" [columns]=\"2\"></data-area>\n  ","styles":[".columnDesigner {\n    background-color: white;\n    position: absolute;\n    padding: 10px;\n    border-color: gray;\n    border-width: 2px;\n    border-style: solid;\n    z-index: 800;\n    border-radius: 5px;\n    width: 300px;\n}\n\n    .columnDesigner .form-group {\n        margin-right: 0;\n        margin-left: 0;\n    }\n\n.filterDialog {\n    background-color: white;\n    position: absolute;\n    padding: 10px;\n    border-color: gray;\n    border-width: 2px;\n    border-style: solid;\n    z-index: 800;\n    border-radius: 5px;\n\n}\n\n    .filterDialog .form-group {\n        margin-right: 0;\n        margin-left: 0;\n    }\n\n.designModeButton span {\n    visibility: hidden;\n}\n\n.designModeButton:hover span {\n    visibility: visible\n}\n\n.headerWithFilter {\n}\n.headerWithFilter .filterButton{\n    visibility:hidden;\n}\n    .headerWithFilter .filteredFilterButton {\n        visibility: visible;\n    }\n    .headerWithFilter:hover .filterButton {\n        visibility: visible;\n    }\n\n.filterButton {\n}\ntable input {\n    min-width:75px;\n}\ntable select {\n    min-width:100px\n}"]}]}],"members":{"records":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"settings":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"dataView":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"getButtonCssClass":[{"__symbolic":"method"}],"addButton":[{"__symbolic":"method"}],"rowClicked":[{"__symbolic":"method"}],"nextPage":[{"__symbolic":"method"}],"previousPage":[{"__symbolic":"method"}],"catchErrors":[{"__symbolic":"method"}],"showError":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}],"_getRowClass":[{"__symbolic":"method"}]}},"makeTitle":{"__symbolic":"function","parameters":["name"],"value":{"__symbolic":"error","message":"Expression form not supported","line":944,"character":17}},"IDataAreaSettings":{"__symbolic":"interface"},"DataAreaSettings":{"__symbolic":"class","arity":1,"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ColumnCollection","arguments":[{"__symbolic":"error","message":"Could not resolve type","line":958,"character":49,"context":{"typeName":"rowType"}}]},{"__symbolic":"reference","name":"any","arguments":[{"__symbolic":"error","message":"Could not resolve type","line":958,"character":94,"context":{"typeName":"rowType"}}]}]}]}},"Lookup":{"__symbolic":"class","arity":1,"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"string"}]}],"get":[{"__symbolic":"method"}],"found":[{"__symbolic":"method"}],"getInternal":[{"__symbolic":"method"}],"_internalGetByOptions":[{"__symbolic":"method"}],"whenGet":[{"__symbolic":"method"}]}},"DataSettings":{"__symbolic":"class","arity":1,"members":{"showSelectPopup":[{"__symbolic":"method"}],"addNewRow":[{"__symbolic":"method"}],"__scopeToRow":[{"__symbolic":"method"}],"addArea":[{"__symbolic":"method"}],"setCurrentRow":[{"__symbolic":"method"}],"nextRow":[{"__symbolic":"method"}],"previousRowAllowed":[{"__symbolic":"method"}],"previousRow":[{"__symbolic":"method"}],"deleteCurentRow":[{"__symbolic":"method"}],"currentRowAsRestListItemRow":[{"__symbolic":"method"}],"cancelCurrentRowChanges":[{"__symbolic":"method"}],"deleteCurrentRowAllowed":[{"__symbolic":"method"}],"currentRowChanged":[{"__symbolic":"method"}],"saveCurrentRow":[{"__symbolic":"method"}],"_doSavingRow":[{"__symbolic":"method"}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"string"},{"__symbolic":"reference","name":"any","arguments":[{"__symbolic":"error","message":"Could not resolve type","line":1161,"character":59,"context":{"typeName":"rowType"}}]}]}],"nextPage":[{"__symbolic":"method"}],"previousPage":[{"__symbolic":"method"}],"get":[{"__symbolic":"method"}],"sort":[{"__symbolic":"method"}],"sortedAscending":[{"__symbolic":"method"}],"sortedDescending":[{"__symbolic":"method"}],"getRecords":[{"__symbolic":"method"}]}},"IDataSettings":{"__symbolic":"interface"},"ModelState":{"__symbolic":"class","arity":1,"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"any"}]}],"addError":[{"__symbolic":"method"}],"required":[{"__symbolic":"method"}],"addErrorMessage":[{"__symbolic":"method"}]}},"rowEvent":{"__symbolic":"interface"},"ColumnSetting":{"__symbolic":"interface"},"FilteredColumnSetting":{"__symbolic":"interface"},"rowButtonBase":{"__symbolic":"interface"},"rowButton":{"__symbolic":"interface"},"RestList":{"__symbolic":"class","arity":1,"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"string"}]}],"map":[{"__symbolic":"method"}],"get":[{"__symbolic":"method"}],"add":[{"__symbolic":"method"}],"replaceRow":[{"__symbolic":"method"}],"save":[{"__symbolic":"method"}]}},"hasId":{"__symbolic":"interface"},"restListItem":{"__symbolic":"interface"},"getOptions":{"__symbolic":"interface"},"lookupRowInfo":{"__symbolic":"class","arity":1},"AppHelper":{"__symbolic":"class","members":{"__ctor__":[{"__symbolic":"constructor"}],"Register":[{"__symbolic":"method"}],"Add":[{"__symbolic":"method"}]}},"MenuEntry":{"__symbolic":"interface"},"getDayOfWeek":{"__symbolic":"function","parameters":["date"],"value":{"__symbolic":"call","expression":{"__symbolic":"select","expression":{"__symbolic":"call","expression":{"__symbolic":"reference","name":"dateFromDataString"},"arguments":[{"__symbolic":"reference","name":"date"}]},"member":"getDay"}}},"getDayOfWeekName":{"__symbolic":"function","parameters":["date"],"value":{"__symbolic":"call","expression":{"__symbolic":"select","expression":{"__symbolic":"call","expression":{"__symbolic":"reference","name":"dateFromDataString"},"arguments":[{"__symbolic":"reference","name":"date"}]},"member":"toLocaleDateString"},"arguments":["en-us",{"weekday":"long"}]}},"dateFromDataString":{"__symbolic":"function"},"dateToDataString":{"__symbolic":"function"},"entity":{"__symbolic":"class","members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"string"}]}],"initColumns":[{"__symbolic":"method"}],"applyColumn":[{"__symbolic":"method"}]}},"init":{"__symbolic":"function"},"column":{"__symbolic":"class","arity":1,"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"any"}]}],"isEqualTo":[{"__symbolic":"method"}]}},"columnValueProvider":{"__symbolic":"interface"},"iDataColumnSettings":{"__symbolic":"interface"},"textColumn":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"column"},"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"any"}]}]}},"dateColumn":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"column"},"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"any"}]}]}},"numberColumn":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"column"},"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"any"}]}]}},"iFilter":{"__symbolic":"interface"},"filter":{"__symbolic":"class","members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"error","message":"Expression form not supported","line":1755,"character":31}]}],"and":[{"__symbolic":"method"}],"__addToUrl":[{"__symbolic":"method"}]}},"dataView":{"__symbolic":"class","members":{"forEach":[{"__symbolic":"method"}],"refreshData":[{"__symbolic":"method"}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"any"}]}],"addArea":[{"__symbolic":"method"}],"__getDataSettings":[{"__symbolic":"method"}],"initDataSettings":[{"__symbolic":"method"}]}},"IdataViewSettings":{"__symbolic":"interface"},"IRelation":{"__symbolic":"interface"},"radWebModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule"},"arguments":[{"imports":[{"__symbolic":"reference","module":"@angular/forms","name":"FormsModule"},{"__symbolic":"reference","module":"@angular/common","name":"CommonModule"}],"declarations":[{"__symbolic":"reference","name":"DataGridComponent"},{"__symbolic":"reference","name":"DataAreaCompnent"},{"__symbolic":"reference","name":"DataControlComponent"},{"__symbolic":"reference","name":"ColumnDesigner"},{"__symbolic":"reference","name":"SelectPopupComponent"}],"providers":[],"bootstrap":[],"exports":[{"__symbolic":"reference","name":"DataGridComponent"},{"__symbolic":"reference","name":"DataAreaCompnent"},{"__symbolic":"reference","name":"SelectPopupComponent"}]}]}]}}}]